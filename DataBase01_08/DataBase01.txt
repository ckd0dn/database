**데이터 베이스란**
1) 데이터를  저장하는 객체 또는 관계들의 집합
2) 서로 다른 관계를 생성하기 위해 과계뜰에게 가해지는 일련의 연산자들의 집합

1. SQL문장(Query문)
- 원하는 결과를 얻기 위해 DB에 요청하는 요청코드

- SQL문장의 종류
  1) DML(Data Manipulation Language) : 데이터 조작어 
      - SELECT, INSELT, UPDATE, DELETE	
  2) DDL(Data Definiton Language) :  데이터 정의어
      - CREATE, ALTER, DROP, RENAME등... 
  3) DCL(Data Contrl Language) : 데이터 제어어
      - GRANT, REVOKE

1-1. SELECT문 : DB의 자원들을 검색할때 사용하는 키워드
( select * from 테이블명;)
SELECT  * FROM employees;	 -- 사원 테이블의 모든 행을 출력하시오!!

--사원 테이블에서 사번(employee_id), 이름(first_name), 직종(job_id)을 출력하시오.
SELECT employee_id, first_name, job_id
FROM employees;	

사원 테이블에서 사번, 이름, 직종, 급여, 보너스를 출력해보자
그리고 보너스의 실제 급액을 계산하여 검색해보자!
(AS키워드를 통해 별칭을 추가할 수 있다.)
select employee_id, first_name, job_id, salary, commission_pct as comm from employees

-------------------------------------------------------

1-2. WHERE(조건부여)
     -테이블에서 자원들을 검색할 때 필요하며, 사용자가 원하는 자원들을
      간단한 연산자 등을 통해 비교할 수 있도록 해주는 키워드
예)사원테이블에서 급여가 10000이상인 사원들의 정보를
   사번,이름,급여 순으로 출력하기!!
SELECT employee_id, first_name, salary
FROM employees 
Where employee_id = 100;

문) 사원테이블에서 직종 IT_PROG인 사원들의 정보를 
사번, 이름, 직종, 급여 순으로 출력 (문자열은 ' '안에서 비교)
SELECT employee_id, first_name, job_id, salary
FROM employees 
Where job_id = 'IT_PROG';

문) 사원테이블에서 입사일이 2005년 9월 21일인 사원의 정보를 
사번, 이름, 입사일 순으로 출력
select employee_id, first_name, hire_date
from employees
where hire_date = '09/21/2005';


문) 사원테이블에서 입사일이 2005년도인 모든 사원의 정보를 
사번, 이름, 입사일 순으로 출력
select employee_id, first_name, hire_date
from employees
where hire_date >= '01/01/2005' AND hire_date <= '12/31/2005';

-------------------------------------------------------
2. SQL연산자
 1) BETWEEN연산자
 2) IN연산자
 3) LIKE연산자

2-1. BETWEEN연산자
 - A와 B사이의 값을 검색할 때 사용
SELECT employee_id, first_name, job_id, hire_date
FROM employees
WHERE hire_date BETWEEN '01/01/2005' AND '12/31/2005';

2-2. IN연산자 
 - 여러개의 조건을 목록화 한 뒤 일치하는 조건을 검색!

예문) 사원테이블에서 급여가 2200, 3200, 5000, 6800을 받는 
사원들의 정보를 사번,이름,급여순으로 출력

ex)IN을 사용하지 않고 검색!
SELECT employee_id, first_name, salary
FROM employees
WHERE salary = 2200 or salary = 3200 or salary = 5000 or salary = 6800;


ex)IN을 사용하여 검색!
SELECT employee_id, first_name, salary
FROM employees
WHERE salary IN( 2200, 3200, 5000, 6800 );

문) 사원테이블에서 급여가 5000이상이고, 6000이하인 사원의 모든 정보 출력하기!
SELECT *
FROM employees
WHERE salary BETWEEN 5000 AND 6000;
-------------------------------------
2-3.LIKE연산자(유사검색)
- 지정한 문자형태와 완전히 일치하는, 혹은
  특정 문장을 포함하고 있는 자원을 검색
- % : 모든 값
- _ : 하나의 값
ex)'M%' : M으로 시작하는 모든 값
ex)'%d' : d로 끝나는 모든 값 
ex)'M______' : M으로 시작하는 전체길이 7글자인 값
ex)'%a%' : 값 어디든 a가 포함되어 있는 값

예) 사원테이블에서 이름이 M으로시작하는 사원의 정보를 
     사번, 이름, 직종순으로 출력.	
SELECT employee_id, first_name, job_id
FROM employees
WHERE first_name LIKE 'M%';


예) 사원테이블에서 이름이 D로 끝나는 사원의 정보를 
     사번, 이름, 직종순으로 출력.	
SELECT employee_id, first_name, job_id
FROM employees
WHERE first_name LIKE '%D';

예) 사원테이블에서 이름이 7글자인 사원중, 첫글자가 M으로 시작하는 
사원들을 검색하시오
select * from employees
where first_name LIKE 'M______';

문) 2004년도에 입사한 모든 사원들의 이름, 입사일 출력
select first_name, hire_date
from employees
where hire_date LIKE '%2004';

문) 사원테이블에서 이름의 세번째 글자에 a가들어가는 사원의 
사번,이름을 출력하시오
select employee_id, first_name
from employees
where first_name LIKE '__a%';

문) 이름이 H로 시작하면서 6글자 이상인 사원의 모든 정보 조회
select *
from employees
where first_name LIKE 'H_____%';

문) 이름에 소문자o가 들어가며서 a로 끝나는 사원의 모든 정보 조회
select *
from employees
where first_name LIKE '%o%a';