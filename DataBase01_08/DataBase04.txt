6. 그룹함수 
-- 여러 행 또는 테이블 전체 에 대하여 함수를 적용한 뒤
     하나의 결과를 가져오도록 하는 함수
1) AVG() : 평균 값을 구하는 함수
2) COUNT() : 행의 갯수를 반환하는 함수
3) MAX() : 최대값을 구하는 함수
4) MIN() : 최소값을 구하는 함수
5) SUM() : 총 합을 구하는 함수

예) 사원 테이블에서 부서에 속해 있는 사원의 수를 구하기
SELECT COUNT( department_id ) FROM employees; 	
SELECT COUNT( employee_id ) FROM employees;

문) 사원중 보너스를 받는 사원의 수를 출력 
select COUNT(COMMISSION_PCT) from employees;'

문) 사원테이블에서 직종이 SA_REP인 사원들의
     평균 급여와 급여 최고액, 급여 최저액, 급여의총 합을 출력
select round(avg(salary)), max(salary), min(salary), sum(salary)
from employees
where job_id = 'SA_REP';

예) 사원테이블에서 부서번호가 50번인 사원들의
최대급여와 최소급여를 출력하시오
select max(salary), min(salary)
from employees
where department_id = 50;		
--------------------------------
6-1. 그룹화(GROUP BY) 
 - 특정 테이블에서 소그룹을 만들어 결과를 소그룹별로 나눠서 얻어내고자 
할 때 사용

--job_id를 그룹화 하여 각 직종별 인원수를 구하자
select count(*) from employees
GROUP BY job_Id;

예) 각 부서별로 급여의 평균을 구해보자
select round(avg(salary)) from employees
group by department_id;

문) 각 직종별 급여의 평균을 조회
select job_id, avg(salary) from employees
group by job_id;

예)각 부서, 직종별로 그룹화 하여, 결과를 부서번호, 직종, 부서별 
인원수 순으로 출력
select department_id, job_id, count(*)
from employees
group by department_id, job_id
order by department_id;

문) 부서, 직종으로 그룹화한 뒤 
직종별 급여의합을 출력하되, 부서번호가 높은순으로 출력하시오
select job_id, sum(salary), department_id
from employees
group by department_id, job_id
order by department_id desc;

문)각 부서별 급여의 합계, 부서별 사원 수, 부서별 평균 급여를 
화면에 출력 하되 , 급여가 높은순으로 정렬
select sum(salary), count(*), round(avg(salary))
from employees
group by department_id
order by sum(salary) desc;  

문) 부서, 급여를 기준으로 그룹화 한 뒤,
     급여가 5000이상인 결과만 부서번호, 급여, 인원수 수으로 출력
select department_id, salary, count(*)
from employees
where salary >= 5000
group by department_id, salary
order by department_id;

문) 부서, 직종별 그룹화 후
     결과를 부서번호, 직종, 인원수 순으로 출력
     단, 직종이 'MAN'으로 끝나는 경우만 검색하여 출력

select department_id, job_id, count(*)
from employees
where job_id like '%MAN'
group by department_id, job_id
order by department_id;

